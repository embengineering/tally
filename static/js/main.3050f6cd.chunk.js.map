{"version":3,"sources":["tally/TallyItem.js","tally/TallyCategoryForm.js","tally/TallyCategoryFormWrapper.js","tally/Tally.js","tally/TallyWrapper.js","tally/index.js"],"names":["TallyItem","description","currentValue","defaultValue","onAddClick","onRemoveClick","onDeleteClick","className","style","marginBottom","type","onClick","borderTopLeftRadius","borderTopRightRadius","role","width","TallyCategoryForm","onFormDescriptionChange","onFormDefaultChange","onSaveForm","onCancelForm","value","onChange","name","placeholder","step","TallyCategoryFormWrapper","props","handleCancelForm","hideForm","handleSaveForm","event","preventDefault","existingItems","JSON","parse","localStorage","getItem","newItem","id","state","uuid","trim","updatedItems","setItem","stringify","updateItems","handleFormDescriptionChange","setState","target","handleFormDefaultChange","this","React","Component","Tally","items","formVisible","onNewCategory","onResetAll","showForm","length","map","item","key","bind","TallyWrapper","handleAddClick","console","log","Number","storeItemsInLocalStorage","handleRemoveClick","handleDeleteClick","filter","handleNewCategoryClick","handleResetAll","getItemsFromLocalStorage","TallyTool","ReactDOM","render","HTMLElement","window","customElements","define"],"mappings":"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","file":"static/js/main.3050f6cd.chunk.js","sourcesContent":["import React from 'react';\n\nconst TallyItem = ({\n  description = '',\n  currentValue = 0,\n  defaultValue = 0,\n  onAddClick,\n  onRemoveClick,\n  onDeleteClick\n}) =>\n  <div className=\"card\" style={{marginBottom: '10px'}}>\n    <div className=\"card-body\">\n      <h4 className=\"card-title\">\n        {description} <div className=\"float-right badge badge-info\">{`${currentValue} / ${defaultValue}`}</div>\n      </h4>\n      <button type=\"button\" className=\"btn btn-sm btn-primary\" onClick={onAddClick}>Add</button>{' '}\n      <button type=\"button\" className=\"btn btn-sm btn-secondary\" onClick={onRemoveClick}>Remove</button>\n      <button type=\"button\" className=\"btn btn-sm btn-danger float-right\" onClick={onDeleteClick}>Delete</button>\n    </div>\n    <div className=\"progress\" style={{borderTopLeftRadius: 0, borderTopRightRadius: 0}}>\n      <div className=\"progress-bar\" role=\"progressbar\" style={{width: `${currentValue / defaultValue * 100}%`}} aria-valuenow={currentValue} aria-valuemin=\"0\" aria-valuemax={defaultValue}></div>\n    </div>\n  </div>;\n\nexport default TallyItem;","import React from 'react';\n\nconst TallyCategoryForm = ({\n  description,\n  defaultValue,\n  onFormDescriptionChange,\n  onFormDefaultChange,\n  onSaveForm,\n  onCancelForm\n}) =>\n  <div className=\"card\" style={{marginBottom: '10px'}}>\n    <div className=\"card-body\">\n      <form>\n        <div className=\"form-group\">\n          <label>Description</label>\n          <input value={description} onChange={onFormDescriptionChange} name=\"description\" type=\"text\" className=\"form-control\" placeholder=\"Enter description\" />\n        </div>\n        <div className=\"form-group\">\n          <label>Default</label>\n          <input value={defaultValue} onChange={onFormDefaultChange} name=\"default\" type=\"number\" step=\"1\" className=\"form-control\" placeholder=\"Enter default\" />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\" onClick={onSaveForm}>Save</button>\n        {' '}\n        <button type=\"button\" className=\"btn btn-secondary\" onClick={onCancelForm}>Cancel</button>\n      </form>\n    </div>\n  </div>;\n\nexport default TallyCategoryForm;","import React from 'react';\nimport uuid from 'uuid/v4';\nimport TallyCategoryForm from './TallyCategoryForm';\n\nclass TallyCategoryFormWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: '',\n      description: '',\n      defaultValue: 0,\n      currentValue: 0\n    };\n  }\n\n  handleCancelForm = () =>\n    this.props.hideForm();\n\n  handleSaveForm = event => {\n    event.preventDefault(); // prevent default submission\n\n    const existingItems = JSON.parse(localStorage.getItem('tallyItems') || '[]');\n    const newItem = {\n      id: this.state.id || uuid(), // assign new id\n      description: this.state.description.trim(),\n      defaultValue: this.state.defaultValue,\n      currentValue: this.state.currentValue\n    };\n    const updatedItems = [\n      ...existingItems,\n      newItem\n    ];\n\n    localStorage.setItem('tallyItems',\n      JSON.stringify(updatedItems));\n\n    this.props.updateItems(updatedItems);\n    this.props.hideForm();\n  }\n\n  handleFormDescriptionChange = event =>\n    this.setState({ description: event.target.value });\n\n  handleFormDefaultChange = event =>\n    this.setState({ defaultValue: event.target.value });\n\n  render() {\n    return <TallyCategoryForm\n      onSaveForm={this.handleSaveForm}\n      onCancelForm={this.handleCancelForm}\n      description={this.state.description}\n      defaultValue={this.state.defaultValue}\n      onFormDescriptionChange={this.handleFormDescriptionChange}\n      onFormDefaultChange={this.handleFormDefaultChange}\n    />;\n  }\n}\n\nexport default TallyCategoryFormWrapper;","import React from 'react';\nimport TallyItem from './TallyItem';\nimport TallyCategoryFormWrapper from './TallyCategoryFormWrapper';\n\nconst Tally = ({\n  items = [],\n  formVisible,\n  onAddClick,\n  onRemoveClick,\n  onDeleteClick,\n  onNewCategory,\n  onResetAll,\n  hideForm,\n  showForm,\n  updateItems\n}) => {\n\n  const renderHelper = () => (\n    <div className=\"alert alert-secondary\">\n      <strong>TALLY! </strong>\n      Tally is a record of amounts or numbers which you keep\n      changing and adding to as the activity which affects it\n      progresses.\n    </div>\n  );\n\n  const renderNewCategoryButton = () =>\n    <button className=\"btn btn-link\" onClick={onNewCategory}>New Category</button>;\n\n    const renderResetCategoriesButton = () =>\n    <button className=\"btn btn-link text-muted\" onClick={onResetAll}>Reset All</button>;\n\n  const renderForm = () =>\n    formVisible && <TallyCategoryFormWrapper\n        hideForm={hideForm}\n        showForm={showForm}\n        updateItems={updateItems}\n      />;\n\n  const renderItems = () => items.length\n    ? items.map(item =>\n      <TallyItem\n        key={item.id}\n        {...item}\n        onAddClick={onAddClick.bind(this, item.id)}\n        onRemoveClick={onRemoveClick.bind(this, item.id)}\n        onDeleteClick={onDeleteClick.bind(this, item.id)}\n      />\n    )\n    : <div className=\"alert alert-primary\">No categories were found.</div>;\n\n  return (\n    <div>\n      {renderNewCategoryButton()}\n      {renderResetCategoriesButton()}\n      {renderForm()}\n      {renderItems()}\n      {renderHelper()}\n    </div>\n  );\n};\n\nexport default Tally;","import React from 'react';\nimport Tally from './Tally';\n\nclass TallyWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: this.getItemsFromLocalStorage(),\n      formVisible: false\n    };\n  }\n\n  handleAddClick = id =>\n    this.setState({\n      items: this.state.items.map(item => {\n        if(item.id === id && item.currentValue > 0) console.log(`${item.description} increased to ${Number(item.currentValue) + 1}`);\n        return item.id === id\n          ? {\n              ...item,\n              currentValue: Number(item.currentValue) + 1\n            }\n          : item;\n      })\n    }, this.storeItemsInLocalStorage);\n\n  handleRemoveClick = id =>\n    this.setState({\n      items: this.state.items.map(item => {\n        if(item.id === id && item.currentValue > 0) console.log(`${item.description} decreased to ${Number(item.currentValue) - 1}`);\n        return item.id === id && item.currentValue > 0\n          ? {\n            ...item,\n            currentValue: Number(item.currentValue) - 1\n          }\n          : item;\n      })\n    }, this.storeItemsInLocalStorage);\n\n  handleDeleteClick = id =>\n    this.setState({\n      items: this.state.items.filter(item => item.id !== id)\n    }, this.storeItemsInLocalStorage);\n\n  handleNewCategoryClick = () =>\n    this.showForm();\n\n  handleResetAll = () =>\n    this.setState({\n      items: this.state.items.map(item => ({\n        ...item,\n        currentValue: 0\n      }))\n    }, this.storeItemsInLocalStorage);\n\n  hideForm = () =>\n    this.setState({ formVisible: false });\n\n  showForm = () =>\n    this.setState({ formVisible: true });\n\n  updateItems = (items = []) =>\n    this.setState({ items }, this.storeItemsInLocalStorage);\n\n  getItemsFromLocalStorage = () =>\n    JSON.parse(localStorage.getItem('tallyItems') || '[]');\n\n  storeItemsInLocalStorage = () => {\n    localStorage.setItem('tallyItems', JSON.stringify(this.state.items));\n    console.log('Items updated in local storage:', this.state.items)\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Tally\n          items={this.state.items}\n          formVisible={this.state.formVisible}\n          onAddClick={this.handleAddClick.bind(this)}\n          onRemoveClick={this.handleRemoveClick}\n          onDeleteClick={this.handleDeleteClick}\n          onNewCategory={this.handleNewCategoryClick}\n          onResetAll={this.handleResetAll}\n          hideForm={this.hideForm}\n          showForm={this.showForm}\n          updateItems={this.updateItems}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TallyWrapper;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TallyWrapper from './TallyWrapper';\n\nclass TallyTool extends HTMLElement {\n  connectedCallback() {\n    ReactDOM.render(<TallyWrapper />, this);\n  }\n}\n\nwindow.customElements.define('tally-tool', TallyTool);\n"],"sourceRoot":""}